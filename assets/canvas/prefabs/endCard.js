
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.4 (Phaser v2.6.2)


class endCard extends Phaser.Group {
	/**
	 * endCard.
	 * @param {Phaser.Game} aGame A reference to the currently running game.
	 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.
    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
	 * @param {string} aName A name for this group. Not used internally but useful for debugging.
	 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
	 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
	 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
	 */
	constructor(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
		
		super(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
		
		var _logo = this.game.add.sprite(398.0, 297.0, 'LOGO', null, this);
		_logo.scale.set(0.85, 0.85);
		_logo.anchor.set(0.5, 0.5);
		
		var _playNow = this.game.add.sprite(401.0, 671.0, 'playNow', null, this);
		_playNow.scale.set(0.7, 0.7);
		_playNow.pivot.set(0.5, 0.5);
		_playNow.anchor.set(0.5, 0.5);
		
		
		this.pivot.set(0.5, 0.5);
		this.alpha = 0.0;
		this.fixedToCamera = true;
		
		// fields
		
		this.fLogo = _logo;
		this.fPlayNow = _playNow;
		
		this.afterCeate();
		
	}
	
	/* group-methods-begin */
	// -- user code here --
	afterCeate = () =>{
		// this.fLogo.angle = -1.5;
		// this.game.add.tween(this.fLogo).to({angle: [1.5, -1.5]}, 2800, Phaser.Easing.Linear.End, 700, true, 2800).start()
	}
	show = () =>{
		
		this.game.add.tween(this).to({alpha: 1}, 200, Phaser.Easing.Exponential.Out, true)
		this.game.add.tween(this.fLogo.scale).to({x: [1, 0.9], y: [1,0.9]}, 800, Phaser.Easing.Linear.Out, true).onComplete.add(() =>{
			this.game.add.tween(this.fPlayNow.scale).to({x: [0.66, 0.66, 0.73], y:[0.66, 0.66, 0.73]}, 2800, Phaser.Easing.Exponential.Out, 1700, true, 2500).start()
		})
	}
	/* group-methods-end */
}
/* --- end generated code --- */
// -- user code here --



